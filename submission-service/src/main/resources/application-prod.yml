server:
  port: 8082

spring:
  application:
    name: submission-service

  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:postgres-submission}:${DATABASE_PORT:5432}/${DATABASE_NAME:submission_db}
    username: ${SUBMISSION_DB_USER:submission_user}
    password: ${SUBMISSION_DB_PASS:submission_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update  # Cambiado temporalmente para crear las tablas
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:admin}
    password: ${RABBITMQ_PASS:admin_password}
    connection-timeout: 30000

  servlet:
    multipart:
      max-file-size: 15MB
      max-request-size: 20MB

# Almacenamiento de archivos
file:
  storage:
    path: ${FILE_STORAGE_PATH:/app/uploads}

# Configuración de RabbitMQ - Exchanges y Routing Keys
submission:
  exchanges:
    formato-a: formato-a-exchange
    anteproyecto: anteproyecto-exchange
    proyecto: proyecto-exchange
  routing:
    formato-a-enviado: formato-a.enviado
    formato-a-reenviado: formato-a.reenviado
    anteproyecto-enviado: anteproyecto.enviado
    proyecto-rechazo-def: proyecto.rechazado-definitivamente

# Cliente HTTP para Notification Service
notification:
  base-url: ${NOTIFICATION_SERVICE_URL:http://notification-service:8083/api/notifications}
  timeout-ms: 5000

# Logging para producción
logging:
  level:
    root: INFO
    co.unicauca.comunicacionmicroservicios: INFO
    org.springframework.amqp: WARN
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  health:
    rabbit:
      enabled: true
    db:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
