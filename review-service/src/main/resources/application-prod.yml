server:
  port: ${SERVER_PORT:8084}

spring:
  application:
    name: review-service

  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

services:
  submission:
    base-url: ${SUBMISSION_URL:http://submission:8082}
  identity:
    base-url: ${IDENTITY_URL:http://identity:8081}

logging:
  level:
    root: INFO
    co.unicauca.review: INFO
server:
  port: ${SERVER_PORT:8084}
  compression:
    enabled: true

spring:
  application:
    name: review-service

  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/review_db}
    username: ${DATABASE_USERNAME:review_user}
    password: ${DATABASE_PASSWORD:review_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: /
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3

jwt:
  secret: ${JWT_SECRET}

services:
  submission:
    base-url: ${SUBMISSION_URL:http://localhost:8082}
    timeout: 5000
  identity:
    base-url: ${IDENTITY_URL:http://localhost:8081}
    timeout: 5000

evaluation:
  exchange: evaluation.exchange
  queue: evaluation.notifications.queue
  routing-key: evaluation.completed

logging:
  level:
    root: INFO
    co.unicauca.review: DEBUG
    org.springframework.web: INFO
    org.springframework.amqp: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true

